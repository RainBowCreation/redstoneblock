buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins {
    id "org.sonarqube" version "2.6"
    id 'com.adarshr.test-logger' version '1.6.0'
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'jacoco'

version = "1.12.2-v1"
group = "net.rainbowcreation"
archivesBaseName = "RBCredstoneBlock"
sourceCompatibility = targetCompatibility = "1.8"

compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

configurations {
    embed
    compile.extendsFrom(embed)
}

minecraft {
    version = "1.12.2-14.23.4.2705"
    runDir = "run"
    mappings = "snapshot_20171003"
}

dependencies {
    //embed 'org.mariadb.jdbc:mariadb-java-client:2.2.5'
    //embed group: 'org.mindrot', name: 'jbcrypt', version: '0.4'
    //embed group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
    //embed group: 'org.hibernate', name: 'hibernate-validator', version: '6.0.14.Final'
    //embed group: 'javax.el', name: 'javax.el-api', version: '3.0.1-b06'
    //embed group: 'org.glassfish.web', name: 'javax.el', version: '2.2.6'
    //compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.25.2'
    //testCompile group: 'org.mockito', name: 'mockito-core', version: '2.24.0'
    //testCompile('org.junit.jupiter:junit-jupiter-api:5.3.2')
    //testCompile('org.junit.jupiter:junit-jupiter-params:5.3.2')
    //testRuntime('org.junit.jupiter:junit-jupiter-engine:5.3.2')
}

jar {
    from configurations.embed.collect {
        exclude 'META-INF/LICENSE.txt'
        it.isDirectory() ? it : zipTree(it)
    }
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}


test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}

jacocoTestReport {
    reports {
        html.enabled = true
        xml.enabled true
    }
}


check.dependsOn jacocoTestReport